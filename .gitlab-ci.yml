stages:
  - validate
  - plan
  - apply
  - deploy
  - destroy


image:
  name: skyere/ssita:0.0.1
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin/:/usr/sbin:/usr/bin/:/sbin:/bin'

variables:
  STATE: gl-tf-an.tfstate

before_script:
  - rm -rf .terraform
  - terraform --version
  - export AWS_ACCESS_KEY_ID
  - export AWS_SECRET_ACCESS_KEY
  - terraform init
  - echo "$ANSIBLE_SSHKEY" > ansible.key
  - chmod 400 ansible.key
  - export ANSIBLE_HOST_KEY_CHECKING=False
 


validate:
  stage: validate
  script:
    - terraform validate

plan:
  stage: plan
  script:
    - terraform plan -state=$STATE -out "planfile"
  dependencies:
    - validate
  artifacts:
    paths:
      - planfile

apply:
  stage: apply
  script:
    - mkdir hosts/
    - mkdir roles/vars/
    - touch hosts/hosts.ini
    - echo "[web]" >> hosts/hosts.ini
    - echo "---" >> roles/vars/db.yml
    - terraform apply -state=$STATE -input=false "planfile"
  dependencies:
    - plan
  artifacts:
    paths:
      - hosts/hosts.ini
      - roles/vars/db.yml

deploy:
  stage: deploy
  script:
    - ansible-playbook -i hosts/hosts.ini --private-key ansible.key -u ec2-user main.yml
  dependencies:
    - apply

destroy:
  stage: destroy
  script:
    - terraform destroy -state=$STATE -auto-approve
  dependencies:
    - apply
  when: manual